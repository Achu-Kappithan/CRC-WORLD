
<!DOCTYPE html>
<html lang="en">
  <%- include("../layouts/admin/admin_header.ejs") %>

  <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
  <style>
    .additional-fields {
        display: none;
        margin-top: 10px;
    } 

    .img-edit-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 60%;
            background-color: rgba(0, 0, 0, 0.8);
            z-index: 9999;
            overflow-y: auto;
        }
        
        .img-edit-modal__content {
            position: relative;
            background-color: #ffffff;
            margin: 2% auto;
            padding: 25px;
            width: 95%;
            max-width: 600px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        
        .img-edit-modal__close {
            position: absolute;
            right: 15px;
            top: 10px;
            font-size: 24px;
            color: #666;
            cursor: pointer;
            width: 30px;
            height: 30px;
            line-height: 30px;
            text-align: center;
            border-radius: 50%;
            transition: all 0.3s ease;
        }
        
        .img-edit-modal__close:hover {
            background-color: #f0f0f0;
            color: #333;
        }
        
        .img-edit-modal__header {
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }
        
        .img-edit-modal__title {
            font-size: 20px;
            color: #333;
            margin: 0;
            padding-right: 40px;
        }
        
        .img-edit-modal__image-container {
            position: relative;
            max-width: 100%;
            height: 100%;
            margin: 0 auto;
            background-color: #f8f8f8;
            border-radius: 4px;
            overflow: hidden;
        }
        
        .img-edit-modal__image {
            max-width: 100%;
            max-height: 100%;
            margin: 0 auto;
            object-fit: contain;
        }
        
        .img-edit-modal__crop-container {
            display: none;
            width: 100%;
            height: 200px;
            background-color: #f8f8f8;
            border-radius: 4px;
        }
        
        .img-edit-modal__actions {
            margin-top: 20px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            display: flex;
            gap: 10px;
            justify-content: flex-end;
        }
        
        .img-edit-modal__btn {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        
        .img-edit-modal__btn--primary {
            background-color: #4CAF50;
            color: white;
        }
        
        .img-edit-modal__btn--primary:hover {
            background-color: #45a049;
        }
        
        .img-edit-modal__btn--secondary {
            background-color: #f0f0f0;
            color: #333;
        }
        
        .img-edit-modal__btn--secondary:hover {
            background-color: #e4e4e4;
        }
        
        .img-edit-modal__file-input {
            display: none;
        }
    
    </style>




  <body>
    <%- include("../layouts/admin/slidbar.ejs") %>

    <main class="main-wrap">
      <%- include("../layouts/admin/navbar.ejs") %>
      <%- include("../layouts/admin/admin_footer.ejs") %>
      <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Update Product</h2>
                    <% if ((errorMessage.length > 0)) { %>
                        <div class="alert alert-danger">
                            <P><%= errorMessage%></P>
                        </div>
                    <% } %>  
                    <% if ((successMessage.length > 0)) { %>
                        <div class="alert alert-success">
                            <p><%= successMessage %></p>
                        </div>
                    <% } %> 
    
                    <form action="/update_product?pid=<%= productdata._id %>" method="post" onsubmit="return Editformvalidate()" enctype="multipart/form-data" >

                    <div>
                        <button type="submit" class="btn btn-md rounded font-sm hover-up">Update</button>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">
                    <div class="card-header">
                        <h4>Basic</h4>
                    </div>
                    <div class="card-body">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product title</label>
                                <input name="productname" type="text" value="<%= productdata.productname  %>" class="form-control" id="productname">
                                <span id="errorname" class="text-danger"></span>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                 <textarea name="productdis" id="productdis" placeholder="Type here" class="form-control" rows="4"><%= productdata.productdescription %></textarea>
                                 <span id="errordis" class="text-danger"></span>
                            </div>
                            <label class="form-label">Select Size:</label>
                            <br><br>
                            <div class="container mt-4">
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <input type="radio" name="size" id="sm" value="SM" <%= productdata.sizes.some(size => size.size === 'SM') ? 'checked' : '' %> >
                                            <label for="sm">Small</label>
                                        </div>
                                    </div>
            
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <input type="radio" name="size" id="medium" value="Medium" <%= productdata.sizes.some(size => size.size === 'Medium') ? 'checked' : '' %> >
                                            <label for="medium">Medium</label>
                                        </div>
                                    </div>
            
                                    <div class="col-lg-4">
                                        <input type="radio" name="size" id="l" value="L" <%= productdata.sizes.some(size => size.size === 'L') ? 'checked' : '' %> >
                                        <label for="l">Large</label>
                                    </div>
                                </div>
            
                                <div id="additionalFieldsSM" class="additional-fields">
                                    <h5>Small Size</h5>
                                    <div class="form-group">
                                        <label for="stockSM">Stock:</label>
                                        <input type="number" id="stockSM" name="size[SM][stock]" class="form-control" placeholder="Enter stock count"
                                            value="<%= (productdata.sizes.find(size => size.size === 'small') || {}).stock || '' %>">
                                            <span class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label for="actualPriceSM">Actual Price:</label>
                                        <input type="number" id="actualPriceSM" name="size[SM][actualPrice]" class="form-control"  placeholder="Enter actual price"
                                            value="<%= (productdata.sizes.find(size => size.size === 'small') || {}).Actualprice || '' %>">
                                            <span class="text-danger"></span>
                                    </div>
                                </div>
            
                                <div id="additionalFieldsMedium" class="additional-fields">
                                    <h5>Medium Size</h5>
                                    <div class="form-group">
                                        <label for="stockMedium">Stock:</label>
                                        <input type="number" id="stockMedium" name="size[Medium][x]" class="form-control"  placeholder="Enter stock count"
                                            value="<%= (productdata.sizes.find(size => size.size === 'Medium') || {}).stock || '' %>">
                                            <span class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label for="actualPriceMedium">Actual Price:</label>
                                        <input type="number" id="actualPriceMedium" name="size[Medium][actualPrice]" class="form-control"  placeholder="Enter actual price"
                                            value="<%= (productdata.sizes.find(size => size.size === 'Medium') || {}).Actualprice || ''%>">
                                            <span class="text-danger"></span>
                                    </div>
                                </div>
            
                                <div id="additionalFieldsL" class="additional-fields">
                                    <h5>Large Size</h5>
                                    <div class="form-group">
                                        <label for="stockL">Stock:</label>
                                        <input type="number" id="stockL" name="size[L][stock]" class="form-control"  placeholder="Enter stock count"
                                            value="<%= (productdata.sizes.find(size => size.size === 'Large') || {}).stock || '' %>">
                                            <span class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label for="actualPriceL">Actual Price:</label>
                                        <input type="number" id="actualPriceL" name="size[L][actualPrice]" class="form-control"  placeholder="Enter actual price"
                                            value="<%= (productdata.sizes.find(size => size.size === 'Large') || {}).Actualprice || '' %>">
                                            <span class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
            
                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                <div class="card mb-4">
                    <div class="card-header">
                        <h4>Media</h4>
                    </div>
                    <div class="card-body">
                      <div class="input-upload">
                        <label for="image" class="form-label">Update Images</label>
                        <input type="file" name="productimage" class="form-control" id="image" multiple onchange="handleFiles(event)" />


                        <div id="imagePreview" class="existing-images mt-3">
                          <% productdata.productimage.forEach(function(image, index) { %>
                            <img src="/assets/uploads/product/<%= image %>" alt="Current Image" width="100px" style="margin-right: 10px; cursor: pointer;" onclick="openImageModal('<%= image %>', '<%= index %>')">
                          <% }) %>
                        </div>

                        <input type="hidden" id="existingImages" name="existingImages" value="">

                        <div id="imageEditModal" class="img-edit-modal">
                          <div class="img-edit-modal__content">
                              <div class="img-edit-modal__header">
                                  <h3 class="img-edit-modal__title">Edit Image</h3>
                                  <span class="img-edit-modal__close" onclick="closeImageModal()">&times;</span>
                              </div>
                              
                              <div id="regularImageContainer" class="img-edit-modal__image-container">
                                  <img id="modalImage" class="img-edit-modal__image" src="" alt="Selected Image">
                              </div>
                              
                              <div id="cropContainer" class="img-edit-modal__crop-container">
                                  <img id="cropImage" src="" alt="Image to crop">
                              </div>
                              
                              <div class="img-edit-modal__actions">
                                  <input type="file" id="replaceImageInput" class="img-edit-modal__file-input" accept="image/*">
                                  <button type="button" class="img-edit-modal__btn img-edit-modal__btn--secondary" onclick="document.getElementById('replaceImageInput').click()">
                                      Replace Image
                                  </button>
                                  <button type="button" class="img-edit-modal__btn img-edit-modal__btn--secondary" onclick="startImageCropping()">
                                      Crop Image
                                  </button>
                                  <button type="button" class="img-edit-modal__btn img-edit-modal__btn--primary" id="saveCropBtn" style="display: none" onclick="saveImageCrop()">
                                      Save Crop
                                  </button>
                                  <button type="button" class="img-edit-modal__btn img-edit-modal__btn--secondary" id="cancelCropBtn" style="display: none" onclick="cancelImageCropping()">
                                      Cancel
                                  </button>
                              </div>
                          </div>
                      </div>


                      </div>
                    
                        <span id="errorimage" class="text-danger"></span>
                    </div>
                      <div class="card mb-4">
                    <div class="card-header">
                        <h4>Organization</h4>
                    </div>
                    <div class="card-body">
                        <div class="row gx-2">
                            
                            <div class="col-sm-6 mb-3">
                                <label class="form-label">Category</label>
                                <select class="form-select" name="productcategory">
                                    <option value="<%= productdata.category._id %>"><%= productdata.category.name %></option>
                                    <% categorylist.forEach(category => { %>
                                        <option value="<%= category._id %>"><%= category.name %></option>                                            
                                    
                                    <% }) %>
                                </select>
                            </div>

                                                        
                            <div class="col-sm-6 mb-3">
                                <label class="form-label">Brand</label>
                                <select class="form-select" name="productbrand">
                                    <option value="<%= productdata.brand._id %>"><%= productdata.brand.name %></option>
                                    <% brandlist.forEach(brand => { %>
                                        <option value="<%= brand._id %>"><%= brand.name %></option>
                                    <% }) %>
                                </select>
                            </div>
                            <div class="mb-4">
                        </div>
                        </div> 
                    </div>
                </div> 
            </div>
          </form>

        </div>
    </section> 

    <script>
        function Editformvalidate() {
          let isValid = true;
      
          const productName = document.getElementById("productname").value.trim();
          const nameRegex = /^[a-zA-Z0-9\s]+$/;
          if (productName === "" || !nameRegex.test(productName)) {
            document.getElementById("errorname").innerText = "Please enter a valid product name (alphanumeric characters only).";
            isValid = false;
          } else {
            document.getElementById("errorname").innerText = "";
          }
      
          // Validate product description
          const productDescription = document.getElementById("productdis").value.trim();
          if (productDescription === "") {
            document.getElementById("errordis").innerText = "Description cannot be empty.";
            isValid = false;
          } else {
            document.getElementById("errordis").innerText = "";
          }
      
          // Validate stock and price
          const stockSM = document.getElementById("stockSM").value;
          const actualPriceSM = document.getElementById("actualPriceSM").value;
          const stockMedium = document.getElementById("stockMedium").value;
          const actualPriceMedium = document.getElementById("actualPriceMedium").value;
          const stockL = document.getElementById("stockL").value;
          const actualPriceL = document.getElementById("actualPriceL").value;
      
          if (stockSM < 0) {
            document.getElementById("stockSM").nextElementSibling.innerText = "Stock must be a positive number.";
            isValid = false;
          } else {
            document.getElementById("stockSM").nextElementSibling.innerText = "";
          }
      
          if (actualPriceSM < 0 ) {
            document.getElementById("actualPriceSM").nextElementSibling.innerText = "Price must be a positive number.";
            isValid = false;
          } else {
            document.getElementById("actualPriceSM").nextElementSibling.innerText = "";
          }
      
          if (stockMedium < 0 ) {
            document.getElementById("stockMedium").nextElementSibling.innerText = "Stock must be a positive number.";
            isValid = false;
          } else {
            document.getElementById("stockMedium").nextElementSibling.innerText = "";
          }
      
          if (actualPriceMedium < 0 ) {
            document.getElementById("actualPriceMedium").nextElementSibling.innerText = "Price must be a positive number.";
            isValid = false;
          } else {
            document.getElementById("actualPriceMedium").nextElementSibling.innerText = "";
          }
      
          if (stockL < 0 ) {
            document.getElementById("stockL").nextElementSibling.innerText = "Stock must be a positive number.";
            isValid = false;
          } else {
            document.getElementById("stockL").nextElementSibling.innerText = "";
          }
      
          if (actualPriceL < 0 ) {
            document.getElementById("actualPriceL").nextElementSibling.innerText = "Price must be a positive number.";
            isValid = false;
          } else {
            document.getElementById("actualPriceL").nextElementSibling.innerText = "";
          }
      
          // Validate category and brand
          const category = document.querySelector('select[name="productcategory"]').value;
          const brand = document.querySelector('select[name="productbrand"]').value;
      
          if (category === "") {
            alert("Please select a category.");
            isValid = false;
          }
      
          if (brand === "") {
            alert("Please select a brand.");
            isValid = false;
          }
      
          // Validate image type
          const imageInput = document.getElementById("image");
          const allowedExtensions = /(\.jpg|\.jpeg|\.png|\.webp)$/i;
          if (imageInput.files.length > 0) {
            for (let i = 0; i < imageInput.files.length; i++) {
              const file = imageInput.files[i];
              if (!allowedExtensions.test(file.name)) {
                document.getElementById("errorimage").innerText = "Only JPG, PNG, and WEBP files are allowed.";
                isValid = false;
                break;
              } else {
                document.getElementById("errorimage").innerText = "";
              }
            }
          }
      
          return isValid;
        }
      </script>
      

    <!-- //aditional script for senditg sweet alert' -->

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        
    <script>
      const message = "<%= message %>";
      const type = "<%= type %>";

      if (message && message.length > 0) {
          Swal.fire({
              icon: type, // 'success', 'error', 'warning', 'info'
              title: message,
              showConfirmButton: true,
              timer: 3000 
          });
      }
  </script>

    <script>
        const radios = document.querySelectorAll('input[name="size"]');
        
        const additionalFieldsSM = document.getElementById('additionalFieldsSM');
        const additionalFieldsMedium = document.getElementById('additionalFieldsMedium');
        const additionalFieldsL = document.getElementById('additionalFieldsL');
    
        function hideAllFields() {
            additionalFieldsSM.style.display = 'none';
            additionalFieldsMedium.style.display = 'none';
            additionalFieldsL.style.display = 'none';
        }
    
        radios.forEach(radio => {
            radio.addEventListener('change', () => {
                hideAllFields(); 
                
                if (radio.value === 'SM') {
                    additionalFieldsSM.style.display = 'block';
                } else if (radio.value === 'Medium') {
                    additionalFieldsMedium.style.display = 'block';
                } else if (radio.value === 'L') {
                    additionalFieldsL.style.display = 'block';
                }
            });
        });
  





  function handleFiles(event) {
    const imagePreviewDiv = document.getElementById('imagePreview');
    
    imagePreviewDiv.innerHTML = '';

    const files = event.target.files; 
    for (let i = 0; i < files.length; i++) {
      const file = files[i];

      const imgElement = document.createElement('img');
      imgElement.style.width = '100px';
      imgElement.style.marginRight = '10px';
      imgElement.style.cursor = 'pointer';
      imgElement.alt = 'New Image';

      const reader = new FileReader();
      reader.onload = function(e) {
        imgElement.src = e.target.result; 
      };
      reader.readAsDataURL(file);

      imagePreviewDiv.appendChild(imgElement);
    }
  }


let existingImages = [];
let currentImageIndex = -1;
let cropper = null;
let croppedImages = new Map();

function initializeExistingImages() {
    const imagePreview = document.getElementById('imagePreview');
    existingImages = Array.from(imagePreview.getElementsByTagName('img')).map(img => {
        return img.src.split('/').pop(); 
    });
    document.getElementById('existingImages').value = JSON.stringify(existingImages);
}
function openImageModal(imageName, index) {
    currentImageIndex = index;
    const modal = document.getElementById('imageEditModal');
    const modalImage = document.getElementById('modalImage');
    modalImage.src = `/assets/uploads/product/${imageName}`;
    modal.style.display = 'block';
}

function startImageCropping() {
    const regularContainer = document.getElementById('regularImageContainer');
    const cropContainer = document.getElementById('cropContainer');
    const cropImage = document.getElementById('cropImage');
    
    regularContainer.style.display = 'none';
    cropContainer.style.display = 'block';
    document.getElementById('saveCropBtn').style.display = 'inline-block';
    document.getElementById('cancelCropBtn').style.display = 'inline-block';
    
    cropImage.src = document.getElementById('modalImage').src;
    
    if (cropper) {
        cropper.destroy();
    }
    cropper = new Cropper(cropImage, {
        aspectRatio: 1,
        viewMode: 2
    });
}

function saveImageCrop() {
    if (!cropper) return;
    
    cropper.getCroppedCanvas().toBlob(blob => {
        const fileName = existingImages[currentImageIndex];
        const croppedFile = new File([blob], fileName, { type: 'image/jpeg' });
        
        croppedImages.set(currentImageIndex, croppedFile);
        
        const imagePreview = document.getElementById('imagePreview');
        const images = imagePreview.getElementsByTagName('img');
        images[currentImageIndex].src = URL.createObjectURL(blob);
        
        closeImageModal();
    });
}

document.getElementById('replaceImageInput').addEventListener('change', function(event) {
    const file = event.target.files[0];
    if (!file) return;

    const originalFileName = existingImages[currentImageIndex];
    const renamedFile = new File([file], originalFileName, { type: file.type });
    croppedImages.set(currentImageIndex, renamedFile);

    const imagePreview = document.getElementById('imagePreview');
    const images = imagePreview.getElementsByTagName('img');
    const modalImage = document.getElementById('modalImage');
    
    const newImageUrl = URL.createObjectURL(file);
    images[currentImageIndex].src = newImageUrl;
    modalImage.src = newImageUrl;
});

document.querySelector('form').addEventListener('submit', function(e) {
    if (!Editformvalidate()) {
        e.preventDefault(); // Stop form submission if validation fails
        return;
    }
    
    
    const formData = new FormData(this);
    
    formData.set('existingImages', JSON.stringify(existingImages));
    
    croppedImages.forEach((file, index) => {
        formData.append('productimage', file);
    });
    
    fetch(this.action, {
        method: 'POST',
        body: formData
    })
    .then(response => {
        if (response.redirected) {
            window.location.href = response.url;
        }
    })
    .catch(error => console.error('Error:', error));
});

document.addEventListener('DOMContentLoaded', initializeExistingImages);
function closeImageModal() {
    const modal = document.getElementById('imageEditModal');
    const cropContainer = document.getElementById('cropContainer');
    const regularContainer = document.getElementById('regularImageContainer');
    const saveCropBtn = document.getElementById('saveCropBtn');
    const cancelCropBtn = document.getElementById('cancelCropBtn');

    if (cropper) {
        cropper.destroy();
        cropper = null;
    }

    cropContainer.style.display = 'none';
    regularContainer.style.display = 'block';
    
    saveCropBtn.style.display = 'none';
    cancelCropBtn.style.display = 'none';

    modal.style.display = 'none';

    currentImageIndex = -1;
}

document.addEventListener('DOMContentLoaded', function() {
    const closeBtn = document.querySelector('.img-edit-modal__close');
    if (closeBtn) {
        closeBtn.addEventListener('click', closeImageModal);
    }

    const modal = document.getElementById('imageEditModal');
    window.addEventListener('click', function(event) {
        if (event.target === modal) {
            closeImageModal();
        }
    });

    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape' && modal.style.display === 'block') {
            closeImageModal();
        }
    });
});

function cancelImageCropping() {
    if (cropper) {
        cropper.destroy();
        cropper = null;
    }

    document.getElementById('cropContainer').style.display = 'none';
    document.getElementById('regularImageContainer').style.display = 'block';
    document.getElementById('saveCropBtn').style.display = 'none';
    document.getElementById('cancelCropBtn').style.display = 'none';
}
</script>

</main>

    <script src="assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="assets/js/vendors/select2.min.js"></script>
    <script src="assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="assets/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="assets/js/vendors/chart.js"></script>
    <script src="assets/js/main.js" type="text/javascript"></script>
    <script src="assets/js/custom-chart.js" type="text/javascript"></script>
  </body>
</html>













