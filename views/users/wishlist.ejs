<%- include("../layouts/user/header.ejs") %>

    <!--Body Content-->
    <div id="page-content">
    	<!--Page Title-->
    	<div class="page section-header text-center">
			<div class="page-title">
        		<div class="wrapper"><h1 class="page-width">Wish List</h1></div>
      		</div>
		</div>
        <!--End Page Title-->
        
        <div class="container">
        	<div class="row">
                <div class="col-12 col-sm-12 col-md-12 col-lg-12 main-col">
                        <div class="wishlist-table table-content table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <% if (wishlist.length === 0) { %>
                                        <tr>
                                            <td colspan="4" class="text-center"><h3>Your wishlist is empty</h3></td>
                                        </tr>
                                    <% } else { %>
                                    <tr>
                                    	<th class="product-name text-center alt-font">Remove</th>
                                        <th class="product-price text-center alt-font">Images</th>
                                        <th class="product-name alt-font">Product</th>
                                        <th class="product-price text-center alt-font">Select size</th>
                                        <th class="product-price text-center alt-font">Unit Price</th>
                                        <th class="stock-status text-center alt-font">Stock Status</th>
                                        <th class="product-subtotal text-center alt-font">View Details</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% wishlist.forEach(product => { %>
                                    <tr id="wislistitem-<%=product._id%>">
                                    	<td class="product-remove text-center" valign="middle">
                                            <!-- <form method="post" action="/remove_item"> -->
                                            <input type="hidden" id="itemid" value="<%=product._id%>">
                                            <button style="outline: none; border: none; background: none;" type="button" ><i class="icon icon anm anm-times-l removeitem"></i></button>
                                            <!-- </form> -->
                                        </td>
                                        <td class="product-thumbnail text-center">
                                            <a href="#"><img src="/assets/uploads/product/<%= product.productimage[0] %>" alt="" title="" /></a>
                                        </td>
                                        <td class="product-name"><h4 class="no-margin"><a href="#"><%= product.productname %></a></h4></td>
                                        <td> <select name="size" required onchange="updatePriceAndStock('<%= product._id %>', this.value)">
                                            <option value="">Select Size</option>
                                            <% product.sizes.forEach((size, index) => { %>
                                              <option value="<%= index %>"><%= size.size %></option>
                                            <% }) %>
                                          </select>
                                        </td>
                                        <td class="product-price text-center"><span id="price-<%= product._id %>" class="amount"><%= product.sizes[0].priceafteroffer  > 0 ? product.sizes[0].priceafteroffer   : (product.sizes[1].priceafteroffer   > 0 ? product.sizes[1].priceafteroffer    : (product.sizes[2].priceafteroffer    > 0 ? product.sizes[2].priceafteroffer     : "Not available")) %>
                                        </span></td>
                                        <input type="text" id="stockk-<%= product._id %>" value="<%= product.sizes[0].stock %>">
                                        <input type="text" id="Actualprice-<%= product._id %>" value="<%= product.sizes[0].Actualprice %>">
                                        <input type="text" id="sizename-<%= product._id %>" value="<%= product.sizes[0].size %>">
                                        
                                        <td class="stock text-center">
                                            
                                            <% let availablestock = product.sizes[0].stock >0 ? product.sizes[0].stock : (product.sizes[1].stock >0 ? product.sizes[1].stock :  product.sizes[2].stock )%>
                                            <span id="stock-<%= product._id %>" style="font-weight: bold;" class="<%= availablestock > 5 ? 'text-success' : (availablestock > 0 ? 'text-warning' : 'text-danger') %>"><%= availablestock > 5 ? "In Stock" : (availablestock > 0 ? "Limited Stock" : "Out of Stock") %></span>
   
                                        </td>
                                        <td class="product-subtotal text-center"><button type="button" class="btn btn-small hr" onclick="addToCart('<%= product._id %>')">Add to Cart</button></td>
                                    </tr>
                                    <% })%>
                                    
                                </tbody>
                                <% } %>
                            </table>
                        </div>
               	</div>
            </div>
        </div>
    </div>
    <!--End Body Content-->

<!-- aditional scriipt for sending message to user -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        
<script>
  const message = "<%= message %>";
  const type = "<%= type %>";

  if (message && message.length > 0) {
      Swal.fire({
          icon: type, // 'success', 'error', 'warning', 'info'
          title: message,
                  toast: true,
        background: "black",
        color: "white",
        position: "top-end",
        showConfirmButton: false,
        timerProgressBar: true,
        timer: 3000,
        customClass: {
          popup: "custom-toast",
        },
        didOpen: () => {
          const swalPopup = document.querySelector(".custom-toast");
          swalPopup.style.marginTop = "70px";
          swalPopup.style.marginRight = "15px";
        },
      });
  }


document.querySelectorAll(".removeitem").forEach(function(button) {
    button.addEventListener("click", function() {
        const id = document.getElementById("itemid").value;
        console.log("item id", id);

        Swal.fire({
            title: 'Are you sure?',
            text: "You are about to remove this item from the Wishlist.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, remove it!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch("/remove_item", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ id })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            text: data.message,
                            toast: true,
                            position: "top-end",
                            showConfirmButton: false,
                            timerProgressBar: true,
                            timer: 3000,
                        });

                        const removeditem = document.getElementById(`wislistitem-${id}`);
                        console.log("removed item", removeditem);
                        if (removeditem) {
                            removeditem.remove();
                        }
                    } else {
                        Swal.fire({
                            icon: 'error',
                            text: data.message,
                            toast: true,
                            position: "top-end",
                            showConfirmButton: false,
                            timerProgressBar: true,
                            timer: 2000,
                        });
                    }
                })
                .catch(err => {
                    console.error("Error removing wishlist item:", err);
                });
            }
        });
    });
});


// for  dynamicaly change the  price and  sock  when the user select the size
function updatePriceAndStock(productId, sizeIndex) {
    const product = <%- JSON.stringify(wishlist) %>.find(item => item._id === productId);
    const selectedSize = product.sizes[sizeIndex];
    document.getElementById(`stockk-${productId}`).value = selectedSize
    
    const priceElement = document.getElementById(`price-${productId}`);
    priceElement.textContent = selectedSize.priceafteroffer > 0 ? selectedSize.priceafteroffer : "Not available";
    
    const stockElement = document.getElementById(`stock-${productId}`);
    const stockStatus = selectedSize.stock > 5 ? "In Stock" : (selectedSize.stock > 0 ? "Limited Stock" : "Out of Stock");
    stockElement.textContent = stockStatus;
    
    stockElement.className = selectedSize.stock > 5 ? "text-success" : (selectedSize.stock > 0 ? "text-warning" : "text-danger");

    document.getElementById(`stockk-${productId}`).value = selectedSize.stock;
    document.getElementById(`Actualprice-${productId}`).value = selectedSize.Actualprice;
    document.getElementById(`sizename-${productId}`).value = selectedSize.size;
  }

</script>


<script>

//  function for add prodiuct to cart

function addToCart(productId) {
    console.log("funcion staert")

    const productElement = document.getElementById(`wishlistitem-${productId}`);
    const Offerprice = document.getElementById(`price-${productId}`).textContent;
    const stock = document.getElementById(`stockk-${productId}`).value;
    const Actualprice = document.getElementById(`Actualprice-${productId}`).value;
    const Cartsize = document.getElementById(`sizename-${productId}`).value;
    const quantity = 1;
    console.log("product ", productId,Offerprice,stock,Actualprice,Cartsize)

    if (!Cartsize) {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Please select a size before adding to cart!',
        toast: true,
          background: "black",
            color:"white",
            position: "top-end",
            showConfirmButton: false,
            timerProgressBar: true,
            timer: 3000,
            customClass: {
           popup: 'custom-toast'
    },
    didOpen: () => {
        const swalPopup = document.querySelector('.custom-toast');
        swalPopup.style.marginTop = '70px';  
        swalPopup.style.marginRight = '15px'; 
    }

      });
      return;  
    }

    fetch("/addto_cart", {
      method: "POST",
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ productId, quantity, Actualprice, stock, Cartsize, Offerprice }),
    })
    .then(response => response.json())
    .then(data => {
      Swal.fire({
        icon: data.alertType || 'success', 
        title: data.alertTitle || 'Success',
        text: data.alertText || data.message,
        toast: true,
          background: "black",
            color:"white",
            position: "top-end",
            showConfirmButton: false,
            timerProgressBar: true,
            timer: 3000,
            customClass: {
           popup: 'custom-toast'
    },
    didOpen: () => {
        const swalPopup = document.querySelector('.custom-toast');
        swalPopup.style.marginTop = '70px';  
        swalPopup.style.marginRight = '15px'; 
    }

      });
    console.log("updated cartcount",data.count)
    document.getElementById("CartCount").textContent = data.count

    })
    .catch(error => {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Something went wrong!',
        toast: true,
            position: "top-end",
            showConfirmButton: false,
            timerProgressBar: true,
            timer: 3000,
            customClass: {
           popup: 'custom-toast'
    },
    didOpen: () => {
        const swalPopup = document.querySelector('.custom-toast');
        swalPopup.style.marginTop = '70px';  
        swalPopup.style.marginRight = '15px'; 
    }

      });
      console.error("Error adding product to cart:", error);
    });

}

</script>


<%- include("../layouts/user/footer.ejs") %>